{"version":3,"sources":["utils.ts"],"names":["getDotStyle","index","currentIndex","maxIndicators","activeIndicatorConfig","inactiveIndicatorConfig","decreasingDots","indicatorState","dotConfig","length","config","rightRemnant","leftRemnant","leftDifference","rightDifference","leftMax","rightMax","forEach","dot","quantity"],"mappings":"AAYA,OAAO,MAAMA,WAAW,GAAG,CAAC;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA,YAF0B;AAG1BC,EAAAA,aAH0B;AAI1BC,EAAAA,qBAJ0B;AAK1BC,EAAAA,uBAL0B;AAM1BC,EAAAA,cAN0B;AAO1BC,EAAAA;AAP0B,CAAD,KAQG;AAC5B,MAAIC,SAAS,GAAGF,cAAc,CAACA,cAAc,CAACG,MAAf,GAAwB,CAAzB,CAAd,CAA0CC,MAA1D;AAEA,QAAMC,YAAY,GAAGR,aAAa,GAAGI,cAArC;AACA,QAAMK,WAAW,GAAGL,cAAc,GAAG,CAArC;AACA,QAAMM,cAAc,GAAGX,YAAY,GAAGU,WAAtC;AACA,QAAME,eAAe,GAAGZ,YAAY,GAAGS,YAAvC;;AACA,MAAIV,KAAK,IAAIY,cAAT,IAA2BZ,KAAK,IAAIa,eAAxC,EAAyD;AACvDN,IAAAA,SAAS,GAAGH,uBAAZ;;AACA,QAAIJ,KAAK,KAAKC,YAAd,EAA4B;AAC1BM,MAAAA,SAAS,GAAGJ,qBAAZ;AACD;AACF,GALD,MAKO;AACL,QAAIW,OAAO,GAAGF,cAAd;AACA,QAAIG,QAAQ,GAAGF,eAAf;AACAR,IAAAA,cAAc,CAACW,OAAf,CAAwBC,GAAD,IAAS;AAC9B,UACGjB,KAAK,IAAIc,OAAO,GAAGG,GAAG,CAACC,QAAvB,IAAmClB,KAAK,GAAGc,OAA5C,IACCd,KAAK,IAAIe,QAAQ,GAAGE,GAAG,CAACC,QAAxB,IAAoClB,KAAK,GAAGe,QAF/C,EAGE;AACAR,QAAAA,SAAS,GAAGU,GAAG,CAACR,MAAhB;AACD;;AACDK,MAAAA,OAAO,IAAIG,GAAG,CAACC,QAAf;AACAH,MAAAA,QAAQ,IAAIE,GAAG,CAACC,QAAhB;AACD,KATD;AAUD;;AACD,SAAOX,SAAP;AACD,CAnCM","sourcesContent":["import { DecreasingDot, DotConfig } from '../interface';\n\ninterface GetDotStyle {\n  index: number;\n  currentIndex: number;\n  maxIndicators: number;\n  activeIndicatorConfig: DotConfig;\n  inactiveIndicatorConfig: DotConfig;\n  decreasingDots: DecreasingDot[];\n  indicatorState: number;\n}\n\nexport const getDotStyle = ({\n  index,\n  currentIndex,\n  maxIndicators,\n  activeIndicatorConfig,\n  inactiveIndicatorConfig,\n  decreasingDots,\n  indicatorState,\n}: GetDotStyle): DotConfig => {\n  let dotConfig = decreasingDots[decreasingDots.length - 1].config;\n\n  const rightRemnant = maxIndicators - indicatorState;\n  const leftRemnant = indicatorState - 1;\n  const leftDifference = currentIndex - leftRemnant;\n  const rightDifference = currentIndex + rightRemnant;\n  if (index >= leftDifference && index <= rightDifference) {\n    dotConfig = inactiveIndicatorConfig;\n    if (index === currentIndex) {\n      dotConfig = activeIndicatorConfig;\n    }\n  } else {\n    let leftMax = leftDifference;\n    let rightMax = rightDifference;\n    decreasingDots.forEach((dot) => {\n      if (\n        (index >= leftMax - dot.quantity && index < leftMax) ||\n        (index <= rightMax + dot.quantity && index > rightMax)\n      ) {\n        dotConfig = dot.config;\n      }\n      leftMax -= dot.quantity;\n      rightMax += dot.quantity;\n    });\n  }\n  return dotConfig;\n};\n"]}